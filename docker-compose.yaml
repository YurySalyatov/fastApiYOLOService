version: '3.11'

services:
  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./shared_volume:/app/shared_volume
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build: ./backend
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/usr/backend/app
      - ./shared_volume:/app/shared_volume
      - ./shared_volume/models:/app/shared_volume/models
      - ./test_dir:/app/test_dir
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - redis
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://backend:8000/health/" ]
      interval: 15s
      timeout: 10s
      retries: 5

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build: ./backend
    command: celery -A app.main.celery worker --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./shared_volume:/app/shared_volume
    networks:
      - app-network
    depends_on:
      - redis
      - backend
    healthcheck:
      test: [ "CMD", "celery", "-A", "app.main.celery", "inspect", "ping" ]
      interval: 20s
      timeout: 10s
      retries: 5

volumes:
  redis_data:

networks:
  app-network:
    driver: bridge